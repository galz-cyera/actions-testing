"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDependenciesTransitive = void 0;
const logger_1 = require("./logger");
function getDependenciesRecursive(dependenciesFrom, packageMap, ignoreDevDependencies) {
    let result = [];
    const packageGraphNode = packageMap.get(dependenciesFrom);
    if (!packageGraphNode) {
        (0, logger_1.getLogger)().warn(`Package ${dependenciesFrom} not found!`);
        return [];
    }
    for (let dependencyName of packageGraphNode.lernaPackageGraphNode.localDependencies.keys()) {
        if (ignoreDevDependencies && packageGraphNode.lernaPackage.devDependencies[dependencyName]) {
            continue;
        }
        result.push(dependencyName);
        result.push(...getDependenciesRecursive(dependencyName, packageMap, ignoreDevDependencies));
    }
    return result;
}
function getDependenciesTransitive(dependenciesFrom, packageMap, ignoreDevDependencies) {
    let result = getDependenciesRecursive(dependenciesFrom, packageMap, ignoreDevDependencies);
    result = result.filter((v, i, a) => a.indexOf(v) === i); // Filter duplicates
    return result;
}
exports.getDependenciesTransitive = getDependenciesTransitive;
//# sourceMappingURL=get-dependencies-transitive.js.map